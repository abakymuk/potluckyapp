name: CI/CD Preview

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write  # для комментария в PR

concurrency:
  group: pr-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  checks:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: production
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
      SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}
      SUPABASE_SERVICE_ROLE: ${{ secrets.SUPABASE_SERVICE_ROLE }}
      ONLINE_ORDERING_V1: ${{ vars.ONLINE_ORDERING_V1 }}
      ORDER_QUEUE_V1: ${{ vars.ORDER_QUEUE_V1 }}
      AI_ADVISOR_V1: ${{ vars.AI_ADVISOR_V1 }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.14.0

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run linting
        run: pnpm -w lint

      - name: Run type checking
        run: pnpm -w typecheck

      - name: Run tests
        run: |
          export NEXT_PUBLIC_SUPABASE_URL="$NEXT_PUBLIC_SUPABASE_URL"
          export NEXT_PUBLIC_SUPABASE_ANON_KEY="$NEXT_PUBLIC_SUPABASE_ANON_KEY"
          export SUPABASE_DB_URL="$SUPABASE_DB_URL"
          export SUPABASE_SERVICE_ROLE="$SUPABASE_SERVICE_ROLE"
          export ONLINE_ORDERING_V1="$ONLINE_ORDERING_V1"
          export ORDER_QUEUE_V1="$ORDER_QUEUE_V1"
          export AI_ADVISOR_V1="$AI_ADVISOR_V1"
          pnpm --filter @potlucky/config test
          pnpm --filter @potlucky/contracts test
          pnpm --filter @potlucky/types test
          pnpm --filter @potlucky/ui test
          pnpm --filter @potlucky/web test

      - name: Build packages
        run: pnpm -w build

  deploy:
    needs: checks
    runs-on: ubuntu-latest
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_TEAM_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
      ONLINE_ORDERING_V1: ${{ vars.ONLINE_ORDERING_V1 }}
      ORDER_QUEUE_V1: ${{ vars.ORDER_QUEUE_V1 }}
      AI_ADVISOR_V1: ${{ vars.AI_ADVISOR_V1 }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.14.0

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Pull Vercel env (preview)
        run: |
          npx vercel pull --yes --environment=preview --token $VERCEL_TOKEN

      - name: Build with Vercel (prebuilt)
        run: |
          npx vercel build --token $VERCEL_TOKEN

      - name: Deploy preview
        id: deploy
        run: |
          URL=$(npx vercel deploy --prebuilt --token $VERCEL_TOKEN)
          echo "url=$URL" >> $GITHUB_OUTPUT

      - name: Comment PR with preview URL
        uses: actions/github-script@v7
        with:
          script: |
            const url = '${{ steps.deploy.outputs.url }}'
            const body = `🚀 **Vercel Preview:** ${url}\n\n🔍 **Inspect:** https://vercel.com/vlad-ovelians-projects/potluckyapp/${{ github.sha }}\n\n✅ Preview deployment successful!`
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body
            })

      - name: Add URL to job summary
        run: |
          echo "## 🚀 Vercel Preview" >> $GITHUB_STEP_SUMMARY
          echo "**URL:** ${{ steps.deploy.outputs.url }}" >> $GITHUB_STEP_SUMMARY
          echo "**Inspect:** https://vercel.com/vlad-ovelians-projects/potluckyapp/${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
